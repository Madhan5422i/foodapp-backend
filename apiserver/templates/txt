<!-- payment.html -->
<!DOCTYPE html>
<html>
    <head>
        <title>Payment Gateway</title>
    </head>
    <body>
        <h1>Payment Gateway</h1>
        <form action="{% url 'payment' %}" method="POST">
            {% csrf_token %}
            <script
                id="rzp-script"
                src="https://checkout.razorpay.com/v1/checkout.js"
                data-key="{{ key }}"
                data-amount="50000"
                data-currency="INR"
                data-order_id="{{ payment.id }}"
                data-name="Your Company Name"
                data-description="Payment for Order"
                data-prefill.name="Your Customer Name"
                data-prefill.email="customer@example.com"
                data-theme.color="#F37254"
            ></script>
            <input type="hidden" custom="Hidden Element" name="hidden" />
            <!-- <button id="rzp-button">Pay with Razorpay</button> -->
        </form>
        <script>
            document.getElementById('rzp-button').onclick = function(e){
                var rzp1 = new Razorpay(document.getElementById('rzp-script').dataset);
                rzp1.open();
                e.preventDefault();
            }
        </script>
    </body>
</html>






























































<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Razorpay Payment</title>
</head>
<body>
    <h1>Razorpay Payment Integration</h1>
    <form id="payment-form" action="{% url 'success' %}" method="POST">
        {% csrf_token %}
        <script
            id="rzp-script"
            src="https://checkout.razorpay.com/v1/checkout.js"
            data-key="{{ key }}"
            data-amount="50000"
            data-currency="INR"
            data-order_id="{{payment.id}}"
            data-buttontext="Pay with Razorpay"
            data-name="Your Company Name"
            data-description="Test Transaction"
            data-image=""
            data-prefill.name="Customer Name"
            data-prefill.email="customer@example.com"
            data-theme.color="#F37254"
        ></script>
        <input type="hidden" name="hidden" value="Hidden Element" />
    </form>

    <button id="rzp-button1">Pay with Razorpay</button>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        let options = {
            "key": "{{ key }}",
            "amount": "50000",
            "currency": "INR",
            "name": "Your Company Name",
            "description": "Test Transaction",
            "image": "", // Optional: Add your company logo URL here
            "order_id": "{{ payment.id }}",
            "handler": function (response) {
                // Success handler
                alert("Payment successful!");
                alert("Razorpay Payment ID: " + response.razorpay_payment_id);
                alert("Razorpay Order ID: " + response.razorpay_order_id);
                alert("Razorpay Signature: " + response.razorpay_signature);
                // Redirect to success page
                window.location.href = "{% url 'success' %}";
            },
            "prefill": {
                "name": "Customer Name",
                "email": "customer@example.com",
                "contact": "9000090000"
            },
            "notes": {
                "address": "Razorpay Corporate Office"
            },
            "theme": {
                "color": "#F37254"
            }
        };

        // Create Razorpay instance
        let rzp1 = new Razorpay(options);

        // Handle payment failure
        rzp1.on('payment.failed', function (response) {
            alert("Payment failed!");
            alert("Error code: " + response.error.code);
            alert("Description: " + response.error.description);
            alert("Source: " + response.error.source);
            alert("Step: " + response.error.step);
            alert("Reason: " + response.error.reason);
            alert("Order ID: " + response.error.metadata.order_id);
            alert("Payment ID: " + response.error.metadata.payment_id);
            // Redirect to failure page
            window.location.href = "/failure?error_code=" + response.error.code + "&description=" + response.error.description + "&order_id=" + response.error.metadata.order_id;
        });

        // Trigger the payment modal on button click
        document.getElementById('rzp-button1').onclick = function (e) {
            rzp1.open();
            e.preventDefault();
        };

        // Set the order_id dynamically and reinitialize the Razorpay script if needed
        const scriptTag = document.getElementById("rzp-script");
        const oldScript = scriptTag;
        const newScript = document.createElement("script");
        newScript.src = oldScript.src;
        newScript.id = oldScript.id;
        newScript.setAttribute("data-key", oldScript.getAttribute("data-key"));
        newScript.setAttribute("data-amount", oldScript.getAttribute("data-amount"));
        newScript.setAttribute("data-currency", oldScript.getAttribute("data-currency"));
        newScript.setAttribute("data-order_id", "{{ payment.id }}");
        newScript.setAttribute("data-buttontext", oldScript.getAttribute("data-buttontext"));
        newScript.setAttribute("data-name", oldScript.getAttribute("data-name"));
        newScript.setAttribute("data-description", oldScript.getAttribute("data-description"));
        newScript.setAttribute("data-image", oldScript.getAttribute("data-image"));
        newScript.setAttribute("data-prefill.name", oldScript.getAttribute("data-prefill.name"));
        newScript.setAttribute("data-prefill.email", oldScript.getAttribute("data-prefill.email"));
        newScript.setAttribute("data-theme.color", oldScript.getAttribute("data-theme.color"));

        oldScript.parentNode.replaceChild(newScript, oldScript);
    </script>
</body>
</html>
